/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        if(!head || !head->next)return 0;
       
        int sm=0;
       
        ListNode* slow=head;
         ListNode* fast=head->next;
          ListNode* temp=slow;
        ListNode* ans=temp;
ListNode* ans2=temp;
        while(fast!=NULL){
            sm+=fast->val;
            if(fast->val==0){
                slow->val=sm;
                sm=0;
                ans=slow;
                slow=slow->next;
            }
            fast=fast->next;
           
        }
        ans->next=NULL;
        return ans2;
    }
};
